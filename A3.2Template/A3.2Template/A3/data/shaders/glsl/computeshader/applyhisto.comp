// applyhisto.comp
#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, rgba8) uniform image2D inputOutputImage;
layout(std430, binding = 2) buffer CDF {
    float cdf[256];
};

void main() {
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    ivec2 imageSize = imageSize(inputOutputImage);
    if (pos.x >= imageSize.x || pos.y >= imageSize.y) return;

    vec4 pixel = imageLoad(inputOutputImage, pos);
    float luminance = dot(pixel.rgb, vec3(0.299, 0.587, 0.114));
    uint bin = uint(luminance * 255.0);
    float equalizedLuminance = cdf[bin];  // Corrected access to the cdf array
    float factor = equalizedLuminance / luminance;

    // Avoid division by zero or darkening the image unnecessarily
    factor = (luminance > 0.0) ? factor : 1.0;

    vec3 equalizedColor = pixel.rgb * factor;

    imageStore(inputOutputImage, pos, vec4(equalizedColor, pixel.a));
}
